<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int n = 0;
const int e = 1;
const int s = 2;
const int w = 3;

chan ch_forward;
chan ch_turn;

clock ck;
clock time := 0.0;

//int room[3][3][4];

typedef int[0,2] count;
int room [3][3] = {{1, 1, 1},
                   {1, 1, 1},
                   {1, 1, 1}};

int size = 3;

int x = 0;
int y = 0;
int d = n;

bool can_move_forward() {
    if (d == n) {
        return (y+1 &lt; size);
    } else if (d == e) {
        return (x+1 &lt; size);
    } else if (d == s) {
        return (y-1 &gt;= 0);
    } else if (d == w) {
        return (x-1 &gt;= 0);
    }
    return true;
}

void forward() {
    if (d == n) {
        y = y+1;
    } else if (d == e) {
        x = x+1;
    } else if (d == s) {
        y = y-1;
    } else if (d == w) {
        x = x-1;
    }
}

void turn() {
    d = (d+1) % 4;
}

bool is_clean() {
    for (i: count) {
        for (j: count) {
            if (room[i][j] == 1) {
                return false;
            }
        }
    }
    return true;
}</declaration>
	<template>
		<name x="5" y="5">Robot</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="-42" y="-204">
			<name x="-68" y="-238">Cleaning</name>
		</location>
		<location id="id1" x="-42" y="-59">
			<name x="-68" y="-34">Moving</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="-204" y="-76">ck &gt;= 4</label>
			<label kind="synchronisation" x="-204" y="-59">ch_turn!</label>
			<label kind="assignment" x="-246" y="-42">turn(), ck := 0</label>
			<nail x="-136" y="-76"/>
			<nail x="-136" y="-25"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-8" y="-170">can_move_forward() &amp;&amp; ck &gt;= 2</label>
			<label kind="synchronisation" x="-8" y="-153">ch_forward!</label>
			<label kind="assignment" x="-8" y="-136">forward(), ck := 0</label>
			<nail x="-17" y="-144"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="assignment" x="-25" y="-272">room[y][x] = 0</label>
			<label kind="comments" x="-25" y="-297">Clean</label>
		</transition>
	</template>
	<template>
		<name>Room</name>
		<location id="id2" x="-127" y="-8">
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-263" y="-17">ch_turn?</label>
			<nail x="-187" y="-42"/>
			<nail x="-178" y="42"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-42" y="-17">ch_forward?</label>
			<nail x="-76" y="-42"/>
			<nail x="-85" y="34"/>
		</transition>
	</template>
	<system>system Robot, Room;</system>
	<queries>
		<query>
			<formula>E&lt;&gt; x == 0 &amp;&amp; y == 0 &amp;&amp; d == n &amp;&amp; is_clean()
			</formula>
			<comment>
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; room[1][1] == 0
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
